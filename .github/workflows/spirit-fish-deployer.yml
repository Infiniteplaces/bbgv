name: Spirit Fish Deployer

on: push

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn install
      - run: yarn test

  deploy-staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn install
      - run: REACT_APP_STAGE=staging NODE_ENV=production CI="" yarn build
      - name: Do Deploy
        env:
          SPIRIT_FISH_RENDERER_ID: ${{ secrets.SPIRIT_FISH_STAGING_RENDERER_ID }}
          SPIRIT_FISH_CLI_TOKEN: ${{ secrets.SPIRT_FISH_CLI_TOKEN }}
        run: npx spirit-fish deploy $SPIRIT_FISH_RENDERER_ID ./build --activate --token $SPIRIT_FISH_CLI_TOKEN

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn install
      - run: REACT_APP_STAGE=production NODE_ENV=production CI="" yarn build
      - name: Do Deploy
        env:
          SPIRIT_FISH_RENDERER_ID: ${{ secrets.SPIRIT_FISH_STAGING_RENDERER_ID }}
          SPIRIT_FISH_CLI_TOKEN: ${{ secrets.SPIRT_FISH_CLI_TOKEN }}
        run: npx spirit-fish deploy $SPIRIT_FISH_RENDERER_ID ./build --activate --token $SPIRIT_FISH_CLI_TOKEN
